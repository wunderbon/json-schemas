version: 2.1

defaults: &defaults
  docker:
    - image: google/cloud-sdk:alpine

jobs:
  build:
    <<: *defaults
    steps:
      - restore_cache:
          key: cache-git-{{ .Branch }}-{{ .Revision }}

      - checkout

      - run:
          name: Tidy-Up git (git gc)
          command: git gc

      - run:
          name: Managing permissions ...
          command: chmod +x ${HOME}/project/.circleci/*.sh

      - save_cache:
          key: cache-git-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
            - "~/project"

      - run:
          name: Installing build tools ...
          command: ${HOME}/project/.circleci/install-buildtools.sh

      - restore_cache:
          key: cache-dependencies-{{ checksum "npm-shrinkwrap.json" }}

      - run:
          name: Installing packages ...
          command: npm install

      - save_cache:
          key: cache-dependencies-{{ checksum "npm-shrinkwrap.json" }}
          paths:
            - "node_modules"

      - restore_cache:
          key: cache-build-{{ .Branch }}-{{ .Revision }}

      - run:
          name: Dereferencing JSON Schemas ...
          command: ${HOME}/project/.circleci/dereference-json-schemas.sh

      - run:
          name: Faking data by JSON Schemas ...
          command: ${HOME}/project/.circleci/create-fake-json-data.sh

      - save_cache:
          key: cache-build-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/project/build"

  test:
    <<: *defaults
    steps:
      - restore_cache:
          key: cache-git-{{ .Branch }}-{{ .Revision }}

      - checkout

      - run:
          name: Tidy-Up git (git gc)
          command: git gc

      - run:
          name: Managing permissions ...
          command: chmod +x ${HOME}/project/.circleci/*.sh

      - save_cache:
          key: cache-git-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
            - "~/project"

      - run:
          name: Installing build tools ...
          command: ${HOME}/project/.circleci/install-buildtools.sh

      - restore_cache:
          key: cache-dependencies-{{ checksum "npm-shrinkwrap.json" }}

      - run:
          name: Installing packages ...
          command: npm install

      - save_cache:
          key: cache-dependencies-{{ checksum "npm-shrinkwrap.json" }}
          paths:
            - "node_modules"

      - restore_cache:
          key: cache-build-{{ .Branch }}-{{ .Revision }}

      - restore_cache:
          key: cache-test-{{ .Branch }}-{{ .Revision }}

      - run:
          name: Running tests ...
          command: ${HOME}/project/.circleci/test-software.sh

      - run:
          name: Testing JSON Schemas validity ...
          command: ${HOME}/project/.circleci/test-json-schemas.sh

      - run:
          name: Testing JSON Schema inplementations against blueprints ...
          command: ${HOME}/project/.circleci/test-json-data.sh

      - save_cache:
          key: cache-test-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/project/build"

  publish:
    <<: *defaults
    steps:
      - restore_cache:
          key: cache-git-{{ .Branch }}-{{ .Revision }}

      - checkout

      - run:
          name: Tidy-Up git (git gc)
          command: git gc

      - run:
          name: Managing permissions ...
          command: chmod +x ${HOME}/project/.circleci/*.sh

      - save_cache:
          key: cache-git-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
            - "~/project"

      - run:
          name: Installing build tools ...
          command: ${HOME}/project/.circleci/install-buildtools.sh

      - restore_cache:
          key: cache-dependencies-{{ checksum "npm-shrinkwrap.json" }}

      - run:
          name: Installing packages ...
          command: npm install

      - save_cache:
          key: cache-dependencies-{{ checksum "npm-shrinkwrap.json" }}
          paths:
            - "node_modules"

      - restore_cache:
          key: cache-build-{{ .Branch }}-{{ .Revision }}

      - restore_cache:
          key: cache-test-{{ .Branch }}-{{ .Revision }}

      - restore_cache:
          key: cache-publish-{{ .Branch }}-{{ .Revision }}

      - run:
          name: Authenticating with NPM registry ...
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ${HOME}/.npmrc 2>&1

      - run:
          name: Updating version reference and Id URL of schemas ...
          command: ${HOME}/project/.circleci/update-version-reference.sh

      - run:
          name: Creating TypeScript declarations ...
          command: ${HOME}/project/.circleci/create-typescript-declarations.sh

      - run:
          name: Cloning typescript-declaration repository ...
          command: ${HOME}/project/.circleci/clone-typescript-declarations-repository.sh

      - run:
          name: Publishing typescript-decelarations ...
          command: ${HOME}/project/.circleci/publish-typescript-declarations.sh

      - run:
          name: Cloning data-models-typescript repository ...
          command: ${HOME}/project/.circleci/clone-data-models-typescript-repository.sh

      - run:
          name: Publishing data-models-typescript ...
          command: ${HOME}/project/.circleci/publish-data-models-typescript.sh

      - run:
          name: Publishing JSON SChemas ...
          command: ${HOME}/project/.circleci/publish.sh

      - save_cache:
          key: cache-publish-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/project/build"

workflows:
  version: 2
  build:
    jobs:
      - build:
          context: wunderbon-open-source-api
          filters:
            branches:
              only:
                - /^feature\/.+$/
                - develop
                - master
      - test:
          context: wunderbon-open-source-api
          requires:
            - build

  tagged-build:
    jobs:
      - build:
          context: wunderbon-open-source-api
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
      - test:
          context: wunderbon-open-source-api
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
      - publish:
          context: wunderbon-open-source-api
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
