{
  "$id": "https://bitbucket.org/wunderbon/json-schemas/raw/master/schema/cartItem/cartItem.schema.json",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "version": "v0.4.19",
  "contact": {
    "name": "wunderbon Operation GmbH & Co. KG",
    "url": "https://developers.wunderbon.io",
    "email": "open-source@wunderbon.io"
  },
  "title": "Cart-Item",
  "description": "A cart item representation within the wunderbon domain.",
  "type": "object",
  "properties": {
    "product": {
      "description": "Product node either a real EAN/GTIN product or alternatively a generic one.",
      "type": "object",
      "properties": {
        "data": {
          "description": "A generic or EAN/GTIN data based product for display.",
          "type": "object",
          "anyOf": [
            {
              "$ref": "https://bitbucket.org/wunderbon/json-schemas/raw/master/schema/product/genericProduct.schema.json"
            },
            {
              "$ref": "https://bitbucket.org/wunderbon/json-schemas/raw/master/schema/product/eanProduct.schema.json"
            }
          ]
        },
        "quantifier": {
          "description": "Quantifier of this cart item (e.g. 1 pcs. or 200 g).",
          "$ref": "https://bitbucket.org/wunderbon/json-schemas/raw/master/schema/quantifier/quantifier.schema.json"
        },
        "price": {
          "description": "Price of this cart item.",
          "$ref": "https://bitbucket.org/wunderbon/json-schemas/raw/master/schema/price/price.schema.json"
        }
      },
      "required": [
        "data",
        "quantifier",
        "price"
      ],
      "additionalProperties": false
    },
    "meta": {
      "type": "object",
      "properties": {
        "category": {
          "description": "Category of this item.",
          "type": "string",
          "enum": [
            "food",
            "non-food",
            "others"
          ]
        },
        "position": {
          "description": "Position of this item in cart.",
          "type": "integer",
          "minimum": 1,
          "examples": [
            1,
            2,
            999
          ]
        },
        "group": {
          "description": "Group this item belongs to.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[\\S]+$",
          "examples": [
            "Freezer",
            "Fruits",
            "Vegetables"
          ]
        },
        "groupPosition": {
          "description": "Position of this item within its group.",
          "type": "integer",
          "minimum": 1,
          "examples": [
            1,
            2,
            999
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "required": [
    "product"
  ],
  "additionalProperties": false
}
